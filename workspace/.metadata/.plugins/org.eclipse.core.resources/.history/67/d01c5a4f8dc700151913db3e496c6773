package org.usfirst.frc.team1025.robot.subsystems;

import org.usfirst.frc.team1025.robot.RobotMap;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.command.PIDSubsystem;

/**
 *
 */
public class AnalogSubsystem extends PIDSubsystem {
	
	Victor Motor = new Victor(RobotMap.PWM__TESTMOTOR__1);
	AnalogInput pot = RobotMap.AIO__ANALOG__POTENTIOMETER;
    // Initialize your subsystem here
    public AnalogSubsystem() {
    	super("AnalogSubsystem", 2.0, 0, 0);
    	setAbsoluteTolerance(0.05);
    	getPIDController().setContinuous(false);
    	
        // Use these to get going:
        // setSetpoint() -  Sets where the PID controller should move the system
        //                  to
        // enable() - Enables the PID controller.
    }
    
    public void initDefaultCommand() {
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    protected double returnPIDInput() {
        // Return your input value for the PID loop
        // e.g. a sensor, like a potentiometer:
        // yourPot.getAverageVoltage() / kYourMaxVoltage;
    	return pot.getAverageVoltage();
    }
    
    protected void usePIDOutput(double output) {
        // Use output to drive your system, like a motor
        // e.g. yourMotor.set(output);
    	Motor.pidWrite(output);
    }
}
