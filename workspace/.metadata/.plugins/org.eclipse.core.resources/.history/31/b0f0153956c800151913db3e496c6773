package org.usfirst.frc.team1025.robot.subsystems;

import com.ni.vision.NIVision;
import com.ni.vision.NIVision.GetImageSizeResult;
import com.ni.vision.NIVision.Image;
import com.ni.vision.NIVision.ImageType;

import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.vision.USBCamera;

/**
 *
 */
public class CameraSubsystem extends Subsystem {
	
	CameraServer server;
    Image currentFrame=null;
    int session;
    
	USBCamera targetingCamera=null;
	
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
	
	public CameraSubsystem() {
	 server = CameraServer.getInstance();
     //server.setQuality(50);
     //the camera name (ex "cam0") can be found through the roborio web interface
     //server.startAutomaticCapture("cam0");
     //targetingCamera= new USBCamera();
 	
 	session=NIVision.IMAQdxOpenCamera("cam0",NIVision.IMAQdxCameraControlMode.CameraControlModeController);
 	NIVision.IMAQdxConfigureGrab(session);
     currentFrame=NIVision.imaqCreateImage(ImageType.IMAGE_RGB, 0);
	}
	
	 public void GetImage(){
	    	
	    	try{
	    		NIVision.IMAQdxStartAcquisition(session);
	    		 NIVision.IMAQdxGrab(session, currentFrame, 1);
	             GetImageSizeResult result= NIVision.imaqGetImageSize(currentFrame);
	             SmartDashboard.putNumber("Image Height", result.height);
	            CameraServer.getInstance().setImage(currentFrame);
	            NIVision.IMAQdxStopAcquisition(session);
	            
	    		
	            Timer.delay(1);
	    	}
	    	catch(Exception ex){
	    		DriverStation.reportError("PROBLEMO " + ex.getMessage(), true);	
	    	}
	    	
	        
	    }

    public void initDefaultCommand() {
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void updateStatus() {
    	
        this.targetingCamera.getImage(currentFrame);
        //server.setImage(currentFrame);
    }
    
}

